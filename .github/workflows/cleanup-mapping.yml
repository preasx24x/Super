name: Cleanup Gist Mapping

on:
  schedule:
    - cron: "0 * * * *"  # Every hour
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: sudo apt-get install -y jq

      - name: Fetch token and mapping, run cleanup
        run: |
          echo "Fetching token..."
          token=$(curl -s https://gist.githubusercontent.com/Preasx24/137f29d4b3b32c251bf6b7ab2b3fae28/raw/gistfile1.txt | head -n1 | tr -d '\r')

          echo "Fetching current mapping file..."
          raw_url="https://gist.githubusercontent.com/Preasx24/451a35def0daf123212fcb9729d3dfdd/raw/gistfile1.txt"
          curl -s "$raw_url" -o mapping.json

          echo "Creating Python cleanup script..."
          cat <<EOF > clean.py
import json, time

with open("mapping.json") as f:
    data = json.load(f)

now = int(time.time())
expires = data.get("_expires", {})

to_remove = []
for key, exp in list(expires.items()):
    new_exp = exp - 3600
    if new_exp <= now:
        to_remove.append(key)
    else:
        expires[key] = new_exp

for key in to_remove:
    data.pop(key, None)
    expires.pop(key, None)

data["_expires"] = expires

with open("updated.json", "w") as f:
    json.dump(data, f, indent=2)
EOF

          echo "Running cleanup script..."
          python3 clean.py

          echo "Finding correct Gist ID..."
          gist_id=$(curl -s -H "Authorization: Bearer $token" https://api.github.com/gists | jq -r '.[] | select(.files["gistfile1.txt"]) | .id')

          echo "Patching Gist..."
          curl -X PATCH "https://api.github.com/gists/$gist_id" \
            -H "Authorization: Bearer $token" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --rawfile content updated.json '{files: {"gistfile1.txt": {content: $content}}}')"
